import { LogoutButton } from "@/components/container/LogoutButton";
import { PageContainer } from "@/components/container/PageContainer";
import { Button } from "@/components/ui/button";
import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { 
  Play, 
  Settings, 
  Trophy, 
  Users, 
  Gamepad2, 
  Star,
  Volume2,
  VolumeX,
  Menu,
  User
} from "lucide-react";

export default function ExamPage() {
  const [isHovered, setIsHovered] = useState(null);
  const [soundEnabled, setSoundEnabled] = useState(true);
  const [showMenu, setShowMenu] = useState(false);
  const [animatedText, setAnimatedText] = useState("");
  
  const gameTitle = "GAME ARENA";
  
  // Animated typing effect for title
  useEffect(() => {
    let index = 0;
    const timer = setInterval(() => {
      setAnimatedText(gameTitle.slice(0, index));
      index++;
      if (index > gameTitle.length) {
        clearInterval(timer);
      }
    }, 150);
    
    return () => clearInterval(timer);
  }, []);

  const menuItems = [
    { 
      id: 'play', 
      label: 'START GAME', 
      icon: Play, 
      color: 'bg-green-400 hover:bg-green-300',
      shadow: 'shadow-[8px_8px_0px_0px_#166534]',
      hoverShadow: 'hover:shadow-[12px_12px_0px_0px_#166534]'
    },
    { 
      id: 'multiplayer', 
      label: 'MULTIPLAYER', 
      icon: Users, 
      color: 'bg-green-500 hover:bg-green-400',
      shadow: 'shadow-[8px_8px_0px_0px_#15803d]',
      hoverShadow: 'hover:shadow-[12px_12px_0px_0px_#15803d]'
    },
    { 
      id: 'leaderboard', 
      label: 'LEADERBOARD', 
      icon: Trophy, 
      color: 'bg-green-300 hover:bg-green-200',
      shadow: 'shadow-[8px_8px_0px_0px_#16a34a]',
      hoverShadow: 'hover:shadow-[12px_12px_0px_0px_#16a34a]'
    },
    { 
      id: 'settings', 
      label: 'SETTINGS', 
      icon: Settings, 
      color: 'bg-green-600 hover:bg-green-500',
      shadow: 'shadow-[8px_8px_0px_0px_#14532d]',
      hoverShadow: 'hover:shadow-[12px_12px_0px_0px_#14532d]'
    }
  ];

  const stats = [
    { label: 'LEVEL', value: '42' },
    { label: 'WINS', value: '156' },
    { label: 'RANK', value: '#1337' }
  ];

  return (
    <PageContainer>
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
        className="min-h-screen bg-gradient-to-br from-green-50 via-green-100 to-green-200 relative overflow-hidden"
      >
        {/* Animated Background Elements */}
        <div className="absolute inset-0 opacity-20">
          <motion.div 
            animate={{ 
              rotate: [12, -12, 12],
              scale: [1, 1.1, 1]
            }}
            transition={{ 
              duration: 4, 
              repeat: Infinity, 
              ease: "easeInOut" 
            }}
            className="absolute top-20 left-20 w-32 h-32 bg-green-400"
          />
          <motion.div 
            animate={{ 
              rotate: [-12, 12, -12],
              y: [0, -20, 0]
            }}
            transition={{ 
              duration: 3, 
              repeat: Infinity, 
              ease: "easeInOut" 
            }}
            className="absolute top-40 right-32 w-24 h-24 bg-green-500"
          />
          <motion.div 
            animate={{ 
              rotate: [45, -45, 45],
              scale: [1, 1.2, 1]
            }}
            transition={{ 
              duration: 5, 
              repeat: Infinity, 
              ease: "easeInOut" 
            }}
            className="absolute bottom-32 left-40 w-28 h-28 bg-green-600"
          />
          <motion.div 
            animate={{ 
              rotate: [-12, 12, -12],
              x: [0, 10, 0]
            }}
            transition={{ 
              duration: 3.5, 
              repeat: Infinity, 
              ease: "easeInOut" 
            }}
            className="absolute bottom-20 right-20 w-20 h-20 bg-green-300"
          />
        </div>

        {/* Header */}
        <motion.header 
          initial={{ y: -100, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ duration: 0.8, ease: "easeOut" }}
          className="relative z-10 flex justify-between items-center p-6"
        >
          <div className="flex items-center gap-4">
            <motion.div 
              whileHover={{ rotate: 15 }}
              className="w-12 h-12 bg-black flex items-center justify-center border-4 border-black shadow-[4px_4px_0px_0px_#000]"
            >
              <Gamepad2 className="w-6 h-6 text-green-400" />
            </motion.div>
            <div className="hidden md:flex gap-6">
              {stats.map((stat) => (
                <div key={stat.label} className="text-center">
                  <div className="text-2xl font-black text-black">{stat.value}</div>
                  <div className="text-sm font-bold text-gray-600">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>

          <div className="flex items-center gap-4">
            <motion.button
              whileHover={{ 
                scale: 1.1,
                boxShadow: "6px 6px 0px 0px #000"
              }}
              whileTap={{ scale: 0.95 }}
              onClick={() => setSoundEnabled(!soundEnabled)}
              className="w-12 h-12 bg-green-400 border-4 border-black shadow-[4px_4px_0px_0px_#000] transition-all duration-150 flex items-center justify-center"
            >
              {soundEnabled ? <Volume2 className="w-5 h-5 text-black" /> : <VolumeX className="w-5 h-5 text-black" />}
            </motion.button>
            
            <motion.button
              whileHover={{ 
                scale: 1.1,
                boxShadow: "6px 6px 0px 0px #000"
              }}
              whileTap={{ scale: 0.95 }}
              onClick={() => setShowMenu(!showMenu)}
              className="md:hidden w-12 h-12 bg-green-400 border-4 border-black shadow-[4px_4px_0px_0px_#000] transition-all duration-150 flex items-center justify-center"
            >
              <Menu className="w-5 h-5 text-black" />
            </motion.button>
            
            <div className="hidden md:block">
              <LogoutButton />
            </div>
          </div>
        </motion.header>

        {/* Mobile Menu */}
        <AnimatePresence>
          {showMenu && (
            <motion.div 
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              transition={{ duration: 0.2 }}
              className="md:hidden absolute top-20 right-6 z-50 bg-green-400 border-4 border-black shadow-[8px_8px_0px_0px_#000] p-4"
            >
            <div className="flex flex-col gap-4">
              {stats.map((stat) => (
                <div key={stat.label} className="text-center">
                  <div className="text-xl font-black text-black">{stat.value}</div>
                  <div className="text-xs font-bold text-gray-600">{stat.label}</div>
                </div>
              ))}
              <div className="border-t-4 border-black pt-4">
                <LogoutButton />
              </div>
            </div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* Main Content */}
        <div className="flex-1 flex items-center justify-center px-6 py-12">
          <div className="max-w-4xl w-full">
            {/* Title Section */}
            <motion.div 
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ duration: 1, ease: "easeOut" }}
              className="text-center mb-12"
            >
              <motion.h1 
                initial={{ y: 50 }}
                animate={{ y: 0 }}
                transition={{ duration: 0.8, delay: 0.2 }}
                className="text-6xl md:text-8xl font-black text-black mb-4 tracking-tight"
              >
                {animatedText}
                <motion.span 
                  animate={{ opacity: [1, 0, 1] }}
                  transition={{ duration: 1, repeat: Infinity }}
                >
                  |
                </motion.span>
              </motion.h1>
              <motion.div 
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                transition={{ duration: 0.5, delay: 0.5 }}
                className="flex items-center justify-center gap-2 mb-8"
              >
                {[...Array(5)].map((_, i) => (
                  <motion.div
                    key={i}
                    initial={{ rotate: 0 }}
                    animate={{ rotate: 360 }}
                    transition={{
                      duration: 2,
                      delay: i * 0.2,
                      repeat: Infinity,
                      ease: "linear"
                    }}
                  >
                    <Star className="w-6 h-6 text-green-500 fill-current" />
                  </motion.div>
                ))}
              </motion.div>
              <motion.p 
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.8, delay: 0.8 }}
                className="text-xl md:text-2xl font-bold text-gray-700 max-w-2xl mx-auto"
              >
                Welcome back, Player! Ready to dominate the arena?
              </motion.p>
            </motion.div>

            {/* Menu Grid */}
            <motion.div 
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto"
            >
              {menuItems.map((item, index) => {
                const Icon = item.icon;
                return (
                  <motion.button
                    key={item.id}
                    initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.5, delay: 0.6 + index * 0.1 }}
                    whileHover={{ 
                      scale: 1.05,
                      x: -4,
                      y: -4,
                      boxShadow: "12px 12px 0px 0px " + (item.shadow.includes('166534') ? '#166534' : item.shadow.includes('15803d') ? '#15803d' : item.shadow.includes('16a34a') ? '#16a34a' : '#14532d')
                    }}
                    whileTap={{ scale: 0.95 }}
                    onHoverStart={() => setIsHovered(item.id)}
                    onHoverEnd={() => setIsHovered(null)}
                    className={`
                      ${item.color} 
                      ${item.shadow}
                      border-4 border-black p-6 
                      transition-all duration-200 ease-out
                      relative overflow-hidden
                    `}
                  >
                    <div className="flex items-center justify-center gap-4 relative z-10">
                      <motion.div
                        animate={isHovered === item.id ? { rotate: 360 } : { rotate: 0 }}
                        transition={{ duration: 0.5 }}
                      >
                        <Icon className="w-8 h-8 text-black" />
                      </motion.div>
                      <span className="text-xl font-black text-black tracking-wide">
                        {item.label}
                      </span>
                    </div>
                    
                    {/* Hover effect overlay */}
                    <motion.div 
                      initial={{ scale: 0 }}
                      animate={isHovered === item.id ? { scale: 1 } : { scale: 0 }}
                      transition={{ duration: 0.3 }}
                      className="absolute inset-0 bg-white opacity-20 pointer-events-none"
                    />
                  </motion.button>
                );
              })}
            </motion.div>

            {/* Quick Play Section */}
            <motion.div 
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 1 }}
              className="mt-12 text-center"
            >
              <motion.div 
                whileHover={{ scale: 1.02 }}
                className="inline-block bg-green-400 border-4 border-black shadow-[6px_6px_0px_0px_#000] p-4"
              >
                <p className="text-lg font-bold text-black mb-3">QUICK ACTIONS</p>
                <div className="flex flex-wrap justify-center gap-4">
                  <motion.button 
                    whileHover={{ 
                      scale: 1.05,
                      x: -2,
                      y: -2,
                      boxShadow: "5px 5px 0px 0px #000"
                    }}
                    whileTap={{ scale: 0.95 }}
                    className="bg-green-600 hover:bg-green-500 border-3 border-black px-4 py-2 font-bold text-white shadow-[3px_3px_0px_0px_#000] transition-all duration-150"
                  >
                    DAILY CHALLENGE
                  </motion.button>
                  <motion.button 
                    whileHover={{ 
                      scale: 1.05,
                      x: -2,
                      y: -2,
                      boxShadow: "5px 5px 0px 0px #000"
                    }}
                    whileTap={{ scale: 0.95 }}
                    className="bg-green-500 hover:bg-green-400 border-3 border-black px-4 py-2 font-bold text-black shadow-[3px_3px_0px_0px_#000] transition-all duration-150"
                  >
                    RANDOM MATCH
                  </motion.button>
                </div>
              </motion.div>
            </motion.div>
          </div>
        </div>

        {/* Footer */}
        <motion.footer 
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.8, delay: 1.2 }}
          className="relative z-10 p-6 text-center"
        >
          <div className="flex flex-wrap justify-center items-center gap-4 text-sm font-bold text-gray-600">
            <span>© 2024 GAME ARENA</span>
            <div className="w-2 h-2 bg-black"></div>
            <span>VERSION 2.1.0</span>
            <div className="w-2 h-2 bg-black"></div>
            <span>PLAYERS ONLINE: 1,337</span>
          </div>
        </motion.footer>
      </motion.div>
    </PageContainer>
  );
}